<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring
       http://camel.apache.org/schema/spring/camel-spring.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <import resource="routes.xml"/>
    <context:property-placeholder file-encoding="UTF-8" location="classpath:resource.properties"/>


    <!-- Фабрика соединений activemq -->
    <bean id="activeMQXAConnectionFactory" class="bitronix.tm.resource.jms.PoolingConnectionFactory" init-method="init"
    destroy-method="close" depends-on="bitronixTransactionManager">
        <property name="className" value="org.apache.activemq.spring.ActiveMQXAConnectionFactory"/>
        <property name="maxPoolSize" value="20"/>
        <property name="minPoolSize" value="10"/>
        <property name="uniqueName" value="xaConnectionFactory"/>
        <property name="driverProperties">
            <props>
                <prop key="brokerURL">tcp://localhost:61616</prop>
            </props>
        </property>
    </bean>

    <!-- Дата сурс -->
    <bean id="postgreDS" class="bitronix.tm.resource.jdbc.PoolingDataSource" init-method="init" destroy-method="close" >
        <property name="uniqueName" value="JMS"/>
        <property name="className" value="org.postgresql.xa.PGXADataSource"/>
        <property name="maxPoolSize" value="100"/>
        <property name="allowLocalTransactions" value="true"/>
        <property name="driverProperties">
            <props>
                <prop key="serverName">${serverName}</prop>
                <prop key="databaseName">${databaseName}</prop>
                <prop key="portNumber">${portNumber}</prop>
                <prop key="user">${user}</prop>
                <prop key="password">${password}</prop>
            </props>
        </property>
    </bean>




    <!-- Спринговый адаптер для Битроникса -->
    <bean id="jtaTM" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="bitronixTransactionManager"/>
        <property name="userTransaction" ref="bitronixTransactionManager"/>
    </bean>

    <!-- Делаем компонент брокера для настойки роутов -->
    <bean id="jms" class = "org.apache.camel.component.activemq.ActiveMQComponent">
        <property name="transacted" value="false"/>
        <property name="transactionManager" ref="jtaTM"/>
        <property name="connectionFactory" ref="activeMQXAConnectionFactory"/>
    </bean>

    <!-- Начальные настройки Bitronix -->
    <bean id="btmConfig" factory-method="getConfiguration" class="bitronix.tm.TransactionManagerServices">
        <property name="serverId" value="btm"/>
        <property name="logPart1Filename" value="C:/BitronixTM/tx-logs/part1.btm"/>
        <property name="logPart2Filename" value="C:/BitronixTM/tx-logs/part2.btm"/>
    </bean>

    <!-- создание менеджера Bitronix -->
    <bean id="bitronixTransactionManager" factory-method="getTransactionManager" class="bitronix.tm.TransactionManagerServices"
          depends-on="btmConfig" destroy-method="shutdown"/>



    <!--SQL компонент Camel + PosgreSQL DataSourse -->
    <bean id="sql" class="org.apache.camel.component.sql.SqlComponent">
        <property name="dataSource" ref="postgreDS"/>
    </bean>




    <!-- Dead letter queue -->
    <bean id="deadLetterQueue" class="org.apache.camel.builder.DeadLetterChannelBuilder">
        <property name="deadLetterUri" value="jms:queue:dead"/>
        <property name="redeliveryPolicy" ref="redeliveryPolicy"/>
    </bean>

    <!-- Политика переотправки -->
    <bean id="redeliveryPolicy" class="org.apache.camel.processor.errorhandler.RedeliveryPolicy">
        <property name="maximumRedeliveries" value="0"/>
        <property name="redeliveryDelay" value="1000"/>
        <property name="retryAttemptedLogLevel" value="ERROR"/>
    </bean>

    <!-- Процессоры -->
    <bean id="sendProcessor" class="processors.SendProcessor" scope="singleton"/>

    <bean id="viewMailsProcessor" class="processors.ViewMailsProcessor" scope="singleton"/>

    <!-- ДАО -->
    <bean id="messageDataDAOImpl" class="dao.MessageDataDAOImpl" scope="singleton">
        <property name="dataSource" ref="postgreDS"/>
    </bean>

</beans>